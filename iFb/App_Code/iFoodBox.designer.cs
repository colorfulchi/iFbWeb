#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="iFoodBoxDatabase")]
public partial class iFoodBoxDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 擴充性方法定義
  partial void OnCreated();
  partial void InsertcompanyAccounts(companyAccounts instance);
  partial void UpdatecompanyAccounts(companyAccounts instance);
  partial void DeletecompanyAccounts(companyAccounts instance);
  partial void InsertuserData(userData instance);
  partial void UpdateuserData(userData instance);
  partial void DeleteuserData(userData instance);
  partial void InsertcompanyData(companyData instance);
  partial void UpdatecompanyData(companyData instance);
  partial void DeletecompanyData(companyData instance);
  partial void Insertfoods(foods instance);
  partial void Updatefoods(foods instance);
  partial void Deletefoods(foods instance);
  partial void InsertiMap(iMap instance);
  partial void UpdateiMap(iMap instance);
  partial void DeleteiMap(iMap instance);
  partial void Insertinventory(inventory instance);
  partial void Updateinventory(inventory instance);
  partial void Deleteinventory(inventory instance);
  partial void InsertinventoryItems(inventoryItems instance);
  partial void UpdateinventoryItems(inventoryItems instance);
  partial void DeleteinventoryItems(inventoryItems instance);
  partial void InsertiShare(iShare instance);
  partial void UpdateiShare(iShare instance);
  partial void DeleteiShare(iShare instance);
  partial void InsertiSharecomment(iSharecomment instance);
  partial void UpdateiSharecomment(iSharecomment instance);
  partial void DeleteiSharecomment(iSharecomment instance);
  partial void InsertjoinFoodBox(joinFoodBox instance);
  partial void UpdatejoinFoodBox(joinFoodBox instance);
  partial void DeletejoinFoodBox(joinFoodBox instance);
  partial void Insertleaflets(leaflets instance);
  partial void Updateleaflets(leaflets instance);
  partial void Deleteleaflets(leaflets instance);
  partial void InsertmyFoodBox(myFoodBox instance);
  partial void UpdatemyFoodBox(myFoodBox instance);
  partial void DeletemyFoodBox(myFoodBox instance);
  partial void InsertsendMessage(sendMessage instance);
  partial void UpdatesendMessage(sendMessage instance);
  partial void DeletesendMessage(sendMessage instance);
  partial void Insertsysdiagrams(sysdiagrams instance);
  partial void Updatesysdiagrams(sysdiagrams instance);
  partial void Deletesysdiagrams(sysdiagrams instance);
  partial void InserttogetherBuy(togetherBuy instance);
  partial void UpdatetogetherBuy(togetherBuy instance);
  partial void DeletetogetherBuy(togetherBuy instance);
  partial void InserttogetherBuycomment(togetherBuycomment instance);
  partial void UpdatetogetherBuycomment(togetherBuycomment instance);
  partial void DeletetogetherBuycomment(togetherBuycomment instance);
  partial void InsertuserAccounts(userAccounts instance);
  partial void UpdateuserAccounts(userAccounts instance);
  partial void DeleteuserAccounts(userAccounts instance);
  #endregion
	
	public iFoodBoxDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["iFoodBoxDatabaseConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public iFoodBoxDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public iFoodBoxDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public iFoodBoxDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public iFoodBoxDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<companyAccounts> companyAccounts
	{
		get
		{
			return this.GetTable<companyAccounts>();
		}
	}
	
	public System.Data.Linq.Table<userData> userData
	{
		get
		{
			return this.GetTable<userData>();
		}
	}
	
	public System.Data.Linq.Table<companyData> companyData
	{
		get
		{
			return this.GetTable<companyData>();
		}
	}
	
	public System.Data.Linq.Table<foods> foods
	{
		get
		{
			return this.GetTable<foods>();
		}
	}
	
	public System.Data.Linq.Table<iMap> iMap
	{
		get
		{
			return this.GetTable<iMap>();
		}
	}
	
	public System.Data.Linq.Table<inventory> inventory
	{
		get
		{
			return this.GetTable<inventory>();
		}
	}
	
	public System.Data.Linq.Table<inventoryItems> inventoryItems
	{
		get
		{
			return this.GetTable<inventoryItems>();
		}
	}
	
	public System.Data.Linq.Table<iShare> iShare
	{
		get
		{
			return this.GetTable<iShare>();
		}
	}
	
	public System.Data.Linq.Table<iSharecomment> iSharecomment
	{
		get
		{
			return this.GetTable<iSharecomment>();
		}
	}
	
	public System.Data.Linq.Table<joinFoodBox> joinFoodBox
	{
		get
		{
			return this.GetTable<joinFoodBox>();
		}
	}
	
	public System.Data.Linq.Table<leaflets> leaflets
	{
		get
		{
			return this.GetTable<leaflets>();
		}
	}
	
	public System.Data.Linq.Table<myFoodBox> myFoodBox
	{
		get
		{
			return this.GetTable<myFoodBox>();
		}
	}
	
	public System.Data.Linq.Table<sendMessage> sendMessage
	{
		get
		{
			return this.GetTable<sendMessage>();
		}
	}
	
	public System.Data.Linq.Table<sysdiagrams> sysdiagrams
	{
		get
		{
			return this.GetTable<sysdiagrams>();
		}
	}
	
	public System.Data.Linq.Table<togetherBuy> togetherBuy
	{
		get
		{
			return this.GetTable<togetherBuy>();
		}
	}
	
	public System.Data.Linq.Table<togetherBuycomment> togetherBuycomment
	{
		get
		{
			return this.GetTable<togetherBuycomment>();
		}
	}
	
	public System.Data.Linq.Table<userAccounts> userAccounts
	{
		get
		{
			return this.GetTable<userAccounts>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.companyAccounts")]
public partial class companyAccounts : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _accountID;
	
	private string _companyAccount;
	
	private string _companyPassword;
	
	private int _companyID;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnaccountIDChanging(int value);
    partial void OnaccountIDChanged();
    partial void OncompanyAccountChanging(string value);
    partial void OncompanyAccountChanged();
    partial void OncompanyPasswordChanging(string value);
    partial void OncompanyPasswordChanged();
    partial void OncompanyIDChanging(int value);
    partial void OncompanyIDChanged();
    #endregion
	
	public companyAccounts()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int accountID
	{
		get
		{
			return this._accountID;
		}
		set
		{
			if ((this._accountID != value))
			{
				this.OnaccountIDChanging(value);
				this.SendPropertyChanging();
				this._accountID = value;
				this.SendPropertyChanged("accountID");
				this.OnaccountIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyAccount", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string companyAccount
	{
		get
		{
			return this._companyAccount;
		}
		set
		{
			if ((this._companyAccount != value))
			{
				this.OncompanyAccountChanging(value);
				this.SendPropertyChanging();
				this._companyAccount = value;
				this.SendPropertyChanged("companyAccount");
				this.OncompanyAccountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyPassword", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string companyPassword
	{
		get
		{
			return this._companyPassword;
		}
		set
		{
			if ((this._companyPassword != value))
			{
				this.OncompanyPasswordChanging(value);
				this.SendPropertyChanging();
				this._companyPassword = value;
				this.SendPropertyChanged("companyPassword");
				this.OncompanyPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyID", DbType="Int NOT NULL")]
	public int companyID
	{
		get
		{
			return this._companyID;
		}
		set
		{
			if ((this._companyID != value))
			{
				this.OncompanyIDChanging(value);
				this.SendPropertyChanging();
				this._companyID = value;
				this.SendPropertyChanged("companyID");
				this.OncompanyIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.userData")]
public partial class userData : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _userID;
	
	private string _userName;
	
	private System.Nullable<System.DateTime> _userDate;
	
	private System.Nullable<bool> _userSex;
	
	private string _userAfterFour;
	
	private string _userPhone;
	
	private int _iShareEvaluation;
	
	private int _togetherBuyEvaluation;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserIDChanging(int value);
    partial void OnuserIDChanged();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnuserDateChanging(System.Nullable<System.DateTime> value);
    partial void OnuserDateChanged();
    partial void OnuserSexChanging(System.Nullable<bool> value);
    partial void OnuserSexChanged();
    partial void OnuserAfterFourChanging(string value);
    partial void OnuserAfterFourChanged();
    partial void OnuserPhoneChanging(string value);
    partial void OnuserPhoneChanged();
    partial void OniShareEvaluationChanging(int value);
    partial void OniShareEvaluationChanged();
    partial void OntogetherBuyEvaluationChanging(int value);
    partial void OntogetherBuyEvaluationChanged();
    #endregion
	
	public userData()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int userID
	{
		get
		{
			return this._userID;
		}
		set
		{
			if ((this._userID != value))
			{
				this.OnuserIDChanging(value);
				this.SendPropertyChanging();
				this._userID = value;
				this.SendPropertyChanged("userID");
				this.OnuserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="NVarChar(20)")]
	public string userName
	{
		get
		{
			return this._userName;
		}
		set
		{
			if ((this._userName != value))
			{
				this.OnuserNameChanging(value);
				this.SendPropertyChanging();
				this._userName = value;
				this.SendPropertyChanged("userName");
				this.OnuserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userDate", DbType="Date")]
	public System.Nullable<System.DateTime> userDate
	{
		get
		{
			return this._userDate;
		}
		set
		{
			if ((this._userDate != value))
			{
				this.OnuserDateChanging(value);
				this.SendPropertyChanging();
				this._userDate = value;
				this.SendPropertyChanged("userDate");
				this.OnuserDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userSex", DbType="Bit")]
	public System.Nullable<bool> userSex
	{
		get
		{
			return this._userSex;
		}
		set
		{
			if ((this._userSex != value))
			{
				this.OnuserSexChanging(value);
				this.SendPropertyChanging();
				this._userSex = value;
				this.SendPropertyChanged("userSex");
				this.OnuserSexChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userAfterFour", DbType="NVarChar(10)")]
	public string userAfterFour
	{
		get
		{
			return this._userAfterFour;
		}
		set
		{
			if ((this._userAfterFour != value))
			{
				this.OnuserAfterFourChanging(value);
				this.SendPropertyChanging();
				this._userAfterFour = value;
				this.SendPropertyChanged("userAfterFour");
				this.OnuserAfterFourChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userPhone", DbType="NVarChar(20)")]
	public string userPhone
	{
		get
		{
			return this._userPhone;
		}
		set
		{
			if ((this._userPhone != value))
			{
				this.OnuserPhoneChanging(value);
				this.SendPropertyChanging();
				this._userPhone = value;
				this.SendPropertyChanged("userPhone");
				this.OnuserPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iShareEvaluation", DbType="Int NOT NULL")]
	public int iShareEvaluation
	{
		get
		{
			return this._iShareEvaluation;
		}
		set
		{
			if ((this._iShareEvaluation != value))
			{
				this.OniShareEvaluationChanging(value);
				this.SendPropertyChanging();
				this._iShareEvaluation = value;
				this.SendPropertyChanged("iShareEvaluation");
				this.OniShareEvaluationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_togetherBuyEvaluation", DbType="Int NOT NULL")]
	public int togetherBuyEvaluation
	{
		get
		{
			return this._togetherBuyEvaluation;
		}
		set
		{
			if ((this._togetherBuyEvaluation != value))
			{
				this.OntogetherBuyEvaluationChanging(value);
				this.SendPropertyChanging();
				this._togetherBuyEvaluation = value;
				this.SendPropertyChanged("togetherBuyEvaluation");
				this.OntogetherBuyEvaluationChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.companyData")]
public partial class companyData : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _companyID;
	
	private string _companyName;
	
	private string _companyPhone;
	
	private string _companyAddress;
	
	private string _companyEmail;
	
	private string _companyUNumbers;
	
	private string _companyNote;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncompanyIDChanging(int value);
    partial void OncompanyIDChanged();
    partial void OncompanyNameChanging(string value);
    partial void OncompanyNameChanged();
    partial void OncompanyPhoneChanging(string value);
    partial void OncompanyPhoneChanged();
    partial void OncompanyAddressChanging(string value);
    partial void OncompanyAddressChanged();
    partial void OncompanyEmailChanging(string value);
    partial void OncompanyEmailChanged();
    partial void OncompanyUNumbersChanging(string value);
    partial void OncompanyUNumbersChanged();
    partial void OncompanyNoteChanging(string value);
    partial void OncompanyNoteChanged();
    #endregion
	
	public companyData()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int companyID
	{
		get
		{
			return this._companyID;
		}
		set
		{
			if ((this._companyID != value))
			{
				this.OncompanyIDChanging(value);
				this.SendPropertyChanging();
				this._companyID = value;
				this.SendPropertyChanged("companyID");
				this.OncompanyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyName", DbType="NVarChar(20)")]
	public string companyName
	{
		get
		{
			return this._companyName;
		}
		set
		{
			if ((this._companyName != value))
			{
				this.OncompanyNameChanging(value);
				this.SendPropertyChanging();
				this._companyName = value;
				this.SendPropertyChanged("companyName");
				this.OncompanyNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyPhone", DbType="NVarChar(20)")]
	public string companyPhone
	{
		get
		{
			return this._companyPhone;
		}
		set
		{
			if ((this._companyPhone != value))
			{
				this.OncompanyPhoneChanging(value);
				this.SendPropertyChanging();
				this._companyPhone = value;
				this.SendPropertyChanged("companyPhone");
				this.OncompanyPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyAddress", DbType="NVarChar(50)")]
	public string companyAddress
	{
		get
		{
			return this._companyAddress;
		}
		set
		{
			if ((this._companyAddress != value))
			{
				this.OncompanyAddressChanging(value);
				this.SendPropertyChanging();
				this._companyAddress = value;
				this.SendPropertyChanged("companyAddress");
				this.OncompanyAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyEmail", DbType="NVarChar(50)")]
	public string companyEmail
	{
		get
		{
			return this._companyEmail;
		}
		set
		{
			if ((this._companyEmail != value))
			{
				this.OncompanyEmailChanging(value);
				this.SendPropertyChanging();
				this._companyEmail = value;
				this.SendPropertyChanged("companyEmail");
				this.OncompanyEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyUNumbers", DbType="NVarChar(20)")]
	public string companyUNumbers
	{
		get
		{
			return this._companyUNumbers;
		}
		set
		{
			if ((this._companyUNumbers != value))
			{
				this.OncompanyUNumbersChanging(value);
				this.SendPropertyChanging();
				this._companyUNumbers = value;
				this.SendPropertyChanged("companyUNumbers");
				this.OncompanyUNumbersChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyNote", DbType="NVarChar(50)")]
	public string companyNote
	{
		get
		{
			return this._companyNote;
		}
		set
		{
			if ((this._companyNote != value))
			{
				this.OncompanyNoteChanging(value);
				this.SendPropertyChanging();
				this._companyNote = value;
				this.SendPropertyChanged("companyNote");
				this.OncompanyNoteChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.foods")]
public partial class foods : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _foodID;
	
	private string _foodType;
	
	private string _foodName;
	
	private System.Nullable<int> _foodCount;
	
	private System.Nullable<System.DateTime> _foodDate;
	
	private System.Nullable<System.DateTime> _foodDeadline;
	
	private System.Nullable<int> _foodFreezing;
	
	private System.Nullable<int> _foodalarmDay;
	
	private string _foodPicPath;
	
	private System.Nullable<int> _iFoodBoxID;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfoodIDChanging(int value);
    partial void OnfoodIDChanged();
    partial void OnfoodTypeChanging(string value);
    partial void OnfoodTypeChanged();
    partial void OnfoodNameChanging(string value);
    partial void OnfoodNameChanged();
    partial void OnfoodCountChanging(System.Nullable<int> value);
    partial void OnfoodCountChanged();
    partial void OnfoodDateChanging(System.Nullable<System.DateTime> value);
    partial void OnfoodDateChanged();
    partial void OnfoodDeadlineChanging(System.Nullable<System.DateTime> value);
    partial void OnfoodDeadlineChanged();
    partial void OnfoodFreezingChanging(System.Nullable<int> value);
    partial void OnfoodFreezingChanged();
    partial void OnfoodalarmDayChanging(System.Nullable<int> value);
    partial void OnfoodalarmDayChanged();
    partial void OnfoodPicPathChanging(string value);
    partial void OnfoodPicPathChanged();
    partial void OniFoodBoxIDChanging(System.Nullable<int> value);
    partial void OniFoodBoxIDChanged();
    #endregion
	
	public foods()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int foodID
	{
		get
		{
			return this._foodID;
		}
		set
		{
			if ((this._foodID != value))
			{
				this.OnfoodIDChanging(value);
				this.SendPropertyChanging();
				this._foodID = value;
				this.SendPropertyChanged("foodID");
				this.OnfoodIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodType", DbType="NVarChar(10)")]
	public string foodType
	{
		get
		{
			return this._foodType;
		}
		set
		{
			if ((this._foodType != value))
			{
				this.OnfoodTypeChanging(value);
				this.SendPropertyChanging();
				this._foodType = value;
				this.SendPropertyChanged("foodType");
				this.OnfoodTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodName", DbType="NVarChar(20)")]
	public string foodName
	{
		get
		{
			return this._foodName;
		}
		set
		{
			if ((this._foodName != value))
			{
				this.OnfoodNameChanging(value);
				this.SendPropertyChanging();
				this._foodName = value;
				this.SendPropertyChanged("foodName");
				this.OnfoodNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodCount", DbType="Int")]
	public System.Nullable<int> foodCount
	{
		get
		{
			return this._foodCount;
		}
		set
		{
			if ((this._foodCount != value))
			{
				this.OnfoodCountChanging(value);
				this.SendPropertyChanging();
				this._foodCount = value;
				this.SendPropertyChanged("foodCount");
				this.OnfoodCountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodDate", DbType="Date")]
	public System.Nullable<System.DateTime> foodDate
	{
		get
		{
			return this._foodDate;
		}
		set
		{
			if ((this._foodDate != value))
			{
				this.OnfoodDateChanging(value);
				this.SendPropertyChanging();
				this._foodDate = value;
				this.SendPropertyChanged("foodDate");
				this.OnfoodDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodDeadline", DbType="Date")]
	public System.Nullable<System.DateTime> foodDeadline
	{
		get
		{
			return this._foodDeadline;
		}
		set
		{
			if ((this._foodDeadline != value))
			{
				this.OnfoodDeadlineChanging(value);
				this.SendPropertyChanging();
				this._foodDeadline = value;
				this.SendPropertyChanged("foodDeadline");
				this.OnfoodDeadlineChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodFreezing", DbType="Int")]
	public System.Nullable<int> foodFreezing
	{
		get
		{
			return this._foodFreezing;
		}
		set
		{
			if ((this._foodFreezing != value))
			{
				this.OnfoodFreezingChanging(value);
				this.SendPropertyChanging();
				this._foodFreezing = value;
				this.SendPropertyChanged("foodFreezing");
				this.OnfoodFreezingChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodalarmDay", DbType="Int")]
	public System.Nullable<int> foodalarmDay
	{
		get
		{
			return this._foodalarmDay;
		}
		set
		{
			if ((this._foodalarmDay != value))
			{
				this.OnfoodalarmDayChanging(value);
				this.SendPropertyChanging();
				this._foodalarmDay = value;
				this.SendPropertyChanged("foodalarmDay");
				this.OnfoodalarmDayChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodPicPath", DbType="NVarChar(50)")]
	public string foodPicPath
	{
		get
		{
			return this._foodPicPath;
		}
		set
		{
			if ((this._foodPicPath != value))
			{
				this.OnfoodPicPathChanging(value);
				this.SendPropertyChanging();
				this._foodPicPath = value;
				this.SendPropertyChanged("foodPicPath");
				this.OnfoodPicPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iFoodBoxID", DbType="Int")]
	public System.Nullable<int> iFoodBoxID
	{
		get
		{
			return this._iFoodBoxID;
		}
		set
		{
			if ((this._iFoodBoxID != value))
			{
				this.OniFoodBoxIDChanging(value);
				this.SendPropertyChanging();
				this._iFoodBoxID = value;
				this.SendPropertyChanged("iFoodBoxID");
				this.OniFoodBoxIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.iMap")]
public partial class iMap : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _iMapID;
	
	private int _iFoodBoxID;
	
	private System.Nullable<double> _foodBoxCoordinateslat;
	
	private System.Nullable<double> _foodBoxCoordinateslng;
	
	private int _userID;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OniMapIDChanging(int value);
    partial void OniMapIDChanged();
    partial void OniFoodBoxIDChanging(int value);
    partial void OniFoodBoxIDChanged();
    partial void OnfoodBoxCoordinateslatChanging(System.Nullable<double> value);
    partial void OnfoodBoxCoordinateslatChanged();
    partial void OnfoodBoxCoordinateslngChanging(System.Nullable<double> value);
    partial void OnfoodBoxCoordinateslngChanged();
    partial void OnuserIDChanging(int value);
    partial void OnuserIDChanged();
    #endregion
	
	public iMap()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iMapID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int iMapID
	{
		get
		{
			return this._iMapID;
		}
		set
		{
			if ((this._iMapID != value))
			{
				this.OniMapIDChanging(value);
				this.SendPropertyChanging();
				this._iMapID = value;
				this.SendPropertyChanged("iMapID");
				this.OniMapIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iFoodBoxID", DbType="Int NOT NULL")]
	public int iFoodBoxID
	{
		get
		{
			return this._iFoodBoxID;
		}
		set
		{
			if ((this._iFoodBoxID != value))
			{
				this.OniFoodBoxIDChanging(value);
				this.SendPropertyChanging();
				this._iFoodBoxID = value;
				this.SendPropertyChanged("iFoodBoxID");
				this.OniFoodBoxIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodBoxCoordinateslat", DbType="Float")]
	public System.Nullable<double> foodBoxCoordinateslat
	{
		get
		{
			return this._foodBoxCoordinateslat;
		}
		set
		{
			if ((this._foodBoxCoordinateslat != value))
			{
				this.OnfoodBoxCoordinateslatChanging(value);
				this.SendPropertyChanging();
				this._foodBoxCoordinateslat = value;
				this.SendPropertyChanged("foodBoxCoordinateslat");
				this.OnfoodBoxCoordinateslatChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foodBoxCoordinateslng", DbType="Float")]
	public System.Nullable<double> foodBoxCoordinateslng
	{
		get
		{
			return this._foodBoxCoordinateslng;
		}
		set
		{
			if ((this._foodBoxCoordinateslng != value))
			{
				this.OnfoodBoxCoordinateslngChanging(value);
				this.SendPropertyChanging();
				this._foodBoxCoordinateslng = value;
				this.SendPropertyChanged("foodBoxCoordinateslng");
				this.OnfoodBoxCoordinateslngChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="Int NOT NULL")]
	public int userID
	{
		get
		{
			return this._userID;
		}
		set
		{
			if ((this._userID != value))
			{
				this.OnuserIDChanging(value);
				this.SendPropertyChanging();
				this._userID = value;
				this.SendPropertyChanged("userID");
				this.OnuserIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.inventory")]
public partial class inventory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _inventoryID;
	
	private int _userID;
	
	private System.Nullable<System.DateTime> _inventoryDate;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OninventoryIDChanging(int value);
    partial void OninventoryIDChanged();
    partial void OnuserIDChanging(int value);
    partial void OnuserIDChanged();
    partial void OninventoryDateChanging(System.Nullable<System.DateTime> value);
    partial void OninventoryDateChanged();
    #endregion
	
	public inventory()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inventoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int inventoryID
	{
		get
		{
			return this._inventoryID;
		}
		set
		{
			if ((this._inventoryID != value))
			{
				this.OninventoryIDChanging(value);
				this.SendPropertyChanging();
				this._inventoryID = value;
				this.SendPropertyChanged("inventoryID");
				this.OninventoryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="Int NOT NULL")]
	public int userID
	{
		get
		{
			return this._userID;
		}
		set
		{
			if ((this._userID != value))
			{
				this.OnuserIDChanging(value);
				this.SendPropertyChanging();
				this._userID = value;
				this.SendPropertyChanged("userID");
				this.OnuserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inventoryDate", DbType="Date")]
	public System.Nullable<System.DateTime> inventoryDate
	{
		get
		{
			return this._inventoryDate;
		}
		set
		{
			if ((this._inventoryDate != value))
			{
				this.OninventoryDateChanging(value);
				this.SendPropertyChanging();
				this._inventoryDate = value;
				this.SendPropertyChanged("inventoryDate");
				this.OninventoryDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.inventoryItems")]
public partial class inventoryItems : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _itemID;
	
	private string _itemName;
	
	private string _itemPrice;
	
	private string _itemBuyStore;
	
	private string _itemNote;
	
	private int _inventoryID;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnitemIDChanging(int value);
    partial void OnitemIDChanged();
    partial void OnitemNameChanging(string value);
    partial void OnitemNameChanged();
    partial void OnitemPriceChanging(string value);
    partial void OnitemPriceChanged();
    partial void OnitemBuyStoreChanging(string value);
    partial void OnitemBuyStoreChanged();
    partial void OnitemNoteChanging(string value);
    partial void OnitemNoteChanged();
    partial void OninventoryIDChanging(int value);
    partial void OninventoryIDChanged();
    #endregion
	
	public inventoryItems()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int itemID
	{
		get
		{
			return this._itemID;
		}
		set
		{
			if ((this._itemID != value))
			{
				this.OnitemIDChanging(value);
				this.SendPropertyChanging();
				this._itemID = value;
				this.SendPropertyChanged("itemID");
				this.OnitemIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemName", DbType="NVarChar(20)")]
	public string itemName
	{
		get
		{
			return this._itemName;
		}
		set
		{
			if ((this._itemName != value))
			{
				this.OnitemNameChanging(value);
				this.SendPropertyChanging();
				this._itemName = value;
				this.SendPropertyChanged("itemName");
				this.OnitemNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemPrice", DbType="NVarChar(10)")]
	public string itemPrice
	{
		get
		{
			return this._itemPrice;
		}
		set
		{
			if ((this._itemPrice != value))
			{
				this.OnitemPriceChanging(value);
				this.SendPropertyChanging();
				this._itemPrice = value;
				this.SendPropertyChanged("itemPrice");
				this.OnitemPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemBuyStore", DbType="NVarChar(50)")]
	public string itemBuyStore
	{
		get
		{
			return this._itemBuyStore;
		}
		set
		{
			if ((this._itemBuyStore != value))
			{
				this.OnitemBuyStoreChanging(value);
				this.SendPropertyChanging();
				this._itemBuyStore = value;
				this.SendPropertyChanged("itemBuyStore");
				this.OnitemBuyStoreChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemNote", DbType="NVarChar(50)")]
	public string itemNote
	{
		get
		{
			return this._itemNote;
		}
		set
		{
			if ((this._itemNote != value))
			{
				this.OnitemNoteChanging(value);
				this.SendPropertyChanging();
				this._itemNote = value;
				this.SendPropertyChanged("itemNote");
				this.OnitemNoteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inventoryID", DbType="Int NOT NULL")]
	public int inventoryID
	{
		get
		{
			return this._inventoryID;
		}
		set
		{
			if ((this._inventoryID != value))
			{
				this.OninventoryIDChanging(value);
				this.SendPropertyChanging();
				this._inventoryID = value;
				this.SendPropertyChanged("inventoryID");
				this.OninventoryIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.iShare")]
public partial class iShare : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _iShareID;
	
	private int _userID;
	
	private string _iShareFoodName;
	
	private string _iShareFoodCount;
	
	private string _iShareFoodAddress;
	
	private System.Nullable<double> _Addresslat;
	
	private System.Nullable<double> _Addresslng;
	
	private System.Nullable<System.DateTime> _messageTime;
	
	private System.Nullable<System.DateTime> _messageTimeOver;
	
	private string _messageNote;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OniShareIDChanging(int value);
    partial void OniShareIDChanged();
    partial void OnuserIDChanging(int value);
    partial void OnuserIDChanged();
    partial void OniShareFoodNameChanging(string value);
    partial void OniShareFoodNameChanged();
    partial void OniShareFoodCountChanging(string value);
    partial void OniShareFoodCountChanged();
    partial void OniShareFoodAddressChanging(string value);
    partial void OniShareFoodAddressChanged();
    partial void OnAddresslatChanging(System.Nullable<double> value);
    partial void OnAddresslatChanged();
    partial void OnAddresslngChanging(System.Nullable<double> value);
    partial void OnAddresslngChanged();
    partial void OnmessageTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnmessageTimeChanged();
    partial void OnmessageTimeOverChanging(System.Nullable<System.DateTime> value);
    partial void OnmessageTimeOverChanged();
    partial void OnmessageNoteChanging(string value);
    partial void OnmessageNoteChanged();
    #endregion
	
	public iShare()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iShareID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int iShareID
	{
		get
		{
			return this._iShareID;
		}
		set
		{
			if ((this._iShareID != value))
			{
				this.OniShareIDChanging(value);
				this.SendPropertyChanging();
				this._iShareID = value;
				this.SendPropertyChanged("iShareID");
				this.OniShareIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="Int NOT NULL")]
	public int userID
	{
		get
		{
			return this._userID;
		}
		set
		{
			if ((this._userID != value))
			{
				this.OnuserIDChanging(value);
				this.SendPropertyChanging();
				this._userID = value;
				this.SendPropertyChanged("userID");
				this.OnuserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iShareFoodName", DbType="NVarChar(50)")]
	public string iShareFoodName
	{
		get
		{
			return this._iShareFoodName;
		}
		set
		{
			if ((this._iShareFoodName != value))
			{
				this.OniShareFoodNameChanging(value);
				this.SendPropertyChanging();
				this._iShareFoodName = value;
				this.SendPropertyChanged("iShareFoodName");
				this.OniShareFoodNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iShareFoodCount", DbType="NVarChar(50)")]
	public string iShareFoodCount
	{
		get
		{
			return this._iShareFoodCount;
		}
		set
		{
			if ((this._iShareFoodCount != value))
			{
				this.OniShareFoodCountChanging(value);
				this.SendPropertyChanging();
				this._iShareFoodCount = value;
				this.SendPropertyChanged("iShareFoodCount");
				this.OniShareFoodCountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iShareFoodAddress", DbType="NVarChar(50)")]
	public string iShareFoodAddress
	{
		get
		{
			return this._iShareFoodAddress;
		}
		set
		{
			if ((this._iShareFoodAddress != value))
			{
				this.OniShareFoodAddressChanging(value);
				this.SendPropertyChanging();
				this._iShareFoodAddress = value;
				this.SendPropertyChanged("iShareFoodAddress");
				this.OniShareFoodAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addresslat", DbType="Float")]
	public System.Nullable<double> Addresslat
	{
		get
		{
			return this._Addresslat;
		}
		set
		{
			if ((this._Addresslat != value))
			{
				this.OnAddresslatChanging(value);
				this.SendPropertyChanging();
				this._Addresslat = value;
				this.SendPropertyChanged("Addresslat");
				this.OnAddresslatChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addresslng", DbType="Float")]
	public System.Nullable<double> Addresslng
	{
		get
		{
			return this._Addresslng;
		}
		set
		{
			if ((this._Addresslng != value))
			{
				this.OnAddresslngChanging(value);
				this.SendPropertyChanging();
				this._Addresslng = value;
				this.SendPropertyChanged("Addresslng");
				this.OnAddresslngChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageTime", DbType="DateTime")]
	public System.Nullable<System.DateTime> messageTime
	{
		get
		{
			return this._messageTime;
		}
		set
		{
			if ((this._messageTime != value))
			{
				this.OnmessageTimeChanging(value);
				this.SendPropertyChanging();
				this._messageTime = value;
				this.SendPropertyChanged("messageTime");
				this.OnmessageTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageTimeOver", DbType="DateTime")]
	public System.Nullable<System.DateTime> messageTimeOver
	{
		get
		{
			return this._messageTimeOver;
		}
		set
		{
			if ((this._messageTimeOver != value))
			{
				this.OnmessageTimeOverChanging(value);
				this.SendPropertyChanging();
				this._messageTimeOver = value;
				this.SendPropertyChanged("messageTimeOver");
				this.OnmessageTimeOverChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageNote", DbType="NVarChar(MAX)")]
	public string messageNote
	{
		get
		{
			return this._messageNote;
		}
		set
		{
			if ((this._messageNote != value))
			{
				this.OnmessageNoteChanging(value);
				this.SendPropertyChanging();
				this._messageNote = value;
				this.SendPropertyChanged("messageNote");
				this.OnmessageNoteChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.iSharecomment")]
public partial class iSharecomment : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _iSharecommentID;
	
	private int _iShareID;
	
	private int _userID;
	
	private string _comment;
	
	private System.Nullable<int> _evaluation;
	
	private System.DateTime _commentDay;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OniSharecommentIDChanging(int value);
    partial void OniSharecommentIDChanged();
    partial void OniShareIDChanging(int value);
    partial void OniShareIDChanged();
    partial void OnuserIDChanging(int value);
    partial void OnuserIDChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void OnevaluationChanging(System.Nullable<int> value);
    partial void OnevaluationChanged();
    partial void OncommentDayChanging(System.DateTime value);
    partial void OncommentDayChanged();
    #endregion
	
	public iSharecomment()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iSharecommentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int iSharecommentID
	{
		get
		{
			return this._iSharecommentID;
		}
		set
		{
			if ((this._iSharecommentID != value))
			{
				this.OniSharecommentIDChanging(value);
				this.SendPropertyChanging();
				this._iSharecommentID = value;
				this.SendPropertyChanged("iSharecommentID");
				this.OniSharecommentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iShareID", DbType="Int NOT NULL")]
	public int iShareID
	{
		get
		{
			return this._iShareID;
		}
		set
		{
			if ((this._iShareID != value))
			{
				this.OniShareIDChanging(value);
				this.SendPropertyChanging();
				this._iShareID = value;
				this.SendPropertyChanged("iShareID");
				this.OniShareIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="Int NOT NULL")]
	public int userID
	{
		get
		{
			return this._userID;
		}
		set
		{
			if ((this._userID != value))
			{
				this.OnuserIDChanging(value);
				this.SendPropertyChanging();
				this._userID = value;
				this.SendPropertyChanged("userID");
				this.OnuserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string comment
	{
		get
		{
			return this._comment;
		}
		set
		{
			if ((this._comment != value))
			{
				this.OncommentChanging(value);
				this.SendPropertyChanging();
				this._comment = value;
				this.SendPropertyChanged("comment");
				this.OncommentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_evaluation", DbType="Int")]
	public System.Nullable<int> evaluation
	{
		get
		{
			return this._evaluation;
		}
		set
		{
			if ((this._evaluation != value))
			{
				this.OnevaluationChanging(value);
				this.SendPropertyChanging();
				this._evaluation = value;
				this.SendPropertyChanged("evaluation");
				this.OnevaluationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commentDay", DbType="DateTime NOT NULL")]
	public System.DateTime commentDay
	{
		get
		{
			return this._commentDay;
		}
		set
		{
			if ((this._commentDay != value))
			{
				this.OncommentDayChanging(value);
				this.SendPropertyChanging();
				this._commentDay = value;
				this.SendPropertyChanged("commentDay");
				this.OncommentDayChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.joinFoodBox")]
public partial class joinFoodBox : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _iFoodBoxID;
	
	private int _userID;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OniFoodBoxIDChanging(int value);
    partial void OniFoodBoxIDChanged();
    partial void OnuserIDChanging(int value);
    partial void OnuserIDChanged();
    #endregion
	
	public joinFoodBox()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iFoodBoxID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int iFoodBoxID
	{
		get
		{
			return this._iFoodBoxID;
		}
		set
		{
			if ((this._iFoodBoxID != value))
			{
				this.OniFoodBoxIDChanging(value);
				this.SendPropertyChanging();
				this._iFoodBoxID = value;
				this.SendPropertyChanged("iFoodBoxID");
				this.OniFoodBoxIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int userID
	{
		get
		{
			return this._userID;
		}
		set
		{
			if ((this._userID != value))
			{
				this.OnuserIDChanging(value);
				this.SendPropertyChanging();
				this._userID = value;
				this.SendPropertyChanged("userID");
				this.OnuserIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.leaflets")]
public partial class leaflets : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _leafletID;
	
	private string _leafletName;
	
	private string _leafletPath;
	
	private string _leafletNote;
	
	private int _companyID;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnleafletIDChanging(int value);
    partial void OnleafletIDChanged();
    partial void OnleafletNameChanging(string value);
    partial void OnleafletNameChanged();
    partial void OnleafletPathChanging(string value);
    partial void OnleafletPathChanged();
    partial void OnleafletNoteChanging(string value);
    partial void OnleafletNoteChanged();
    partial void OncompanyIDChanging(int value);
    partial void OncompanyIDChanged();
    #endregion
	
	public leaflets()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_leafletID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int leafletID
	{
		get
		{
			return this._leafletID;
		}
		set
		{
			if ((this._leafletID != value))
			{
				this.OnleafletIDChanging(value);
				this.SendPropertyChanging();
				this._leafletID = value;
				this.SendPropertyChanged("leafletID");
				this.OnleafletIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_leafletName", DbType="NVarChar(20)")]
	public string leafletName
	{
		get
		{
			return this._leafletName;
		}
		set
		{
			if ((this._leafletName != value))
			{
				this.OnleafletNameChanging(value);
				this.SendPropertyChanging();
				this._leafletName = value;
				this.SendPropertyChanged("leafletName");
				this.OnleafletNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_leafletPath", DbType="NVarChar(20)")]
	public string leafletPath
	{
		get
		{
			return this._leafletPath;
		}
		set
		{
			if ((this._leafletPath != value))
			{
				this.OnleafletPathChanging(value);
				this.SendPropertyChanging();
				this._leafletPath = value;
				this.SendPropertyChanged("leafletPath");
				this.OnleafletPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_leafletNote", DbType="NVarChar(20)")]
	public string leafletNote
	{
		get
		{
			return this._leafletNote;
		}
		set
		{
			if ((this._leafletNote != value))
			{
				this.OnleafletNoteChanging(value);
				this.SendPropertyChanging();
				this._leafletNote = value;
				this.SendPropertyChanged("leafletNote");
				this.OnleafletNoteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyID", DbType="Int NOT NULL")]
	public int companyID
	{
		get
		{
			return this._companyID;
		}
		set
		{
			if ((this._companyID != value))
			{
				this.OncompanyIDChanging(value);
				this.SendPropertyChanging();
				this._companyID = value;
				this.SendPropertyChanged("companyID");
				this.OncompanyIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.myFoodBox")]
public partial class myFoodBox : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _iFoodBoxID;
	
	private int _userID;
	
	private string _iFoodBoxAddress;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OniFoodBoxIDChanging(int value);
    partial void OniFoodBoxIDChanged();
    partial void OnuserIDChanging(int value);
    partial void OnuserIDChanged();
    partial void OniFoodBoxAddressChanging(string value);
    partial void OniFoodBoxAddressChanged();
    #endregion
	
	public myFoodBox()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iFoodBoxID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int iFoodBoxID
	{
		get
		{
			return this._iFoodBoxID;
		}
		set
		{
			if ((this._iFoodBoxID != value))
			{
				this.OniFoodBoxIDChanging(value);
				this.SendPropertyChanging();
				this._iFoodBoxID = value;
				this.SendPropertyChanged("iFoodBoxID");
				this.OniFoodBoxIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="Int NOT NULL")]
	public int userID
	{
		get
		{
			return this._userID;
		}
		set
		{
			if ((this._userID != value))
			{
				this.OnuserIDChanging(value);
				this.SendPropertyChanging();
				this._userID = value;
				this.SendPropertyChanged("userID");
				this.OnuserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iFoodBoxAddress", DbType="NVarChar(50)")]
	public string iFoodBoxAddress
	{
		get
		{
			return this._iFoodBoxAddress;
		}
		set
		{
			if ((this._iFoodBoxAddress != value))
			{
				this.OniFoodBoxAddressChanging(value);
				this.SendPropertyChanging();
				this._iFoodBoxAddress = value;
				this.SendPropertyChanged("iFoodBoxAddress");
				this.OniFoodBoxAddressChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sendMessage")]
public partial class sendMessage : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _sendID;
	
	private int _senduserID;
	
	private int _targetuserID;
	
	private string _title;
	
	private string _message;
	
	private System.DateTime _messageTime;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsendIDChanging(int value);
    partial void OnsendIDChanged();
    partial void OnsenduserIDChanging(int value);
    partial void OnsenduserIDChanged();
    partial void OntargetuserIDChanging(int value);
    partial void OntargetuserIDChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    partial void OnmessageTimeChanging(System.DateTime value);
    partial void OnmessageTimeChanged();
    #endregion
	
	public sendMessage()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sendID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int sendID
	{
		get
		{
			return this._sendID;
		}
		set
		{
			if ((this._sendID != value))
			{
				this.OnsendIDChanging(value);
				this.SendPropertyChanging();
				this._sendID = value;
				this.SendPropertyChanged("sendID");
				this.OnsendIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_senduserID", DbType="Int NOT NULL")]
	public int senduserID
	{
		get
		{
			return this._senduserID;
		}
		set
		{
			if ((this._senduserID != value))
			{
				this.OnsenduserIDChanging(value);
				this.SendPropertyChanging();
				this._senduserID = value;
				this.SendPropertyChanged("senduserID");
				this.OnsenduserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_targetuserID", DbType="Int NOT NULL")]
	public int targetuserID
	{
		get
		{
			return this._targetuserID;
		}
		set
		{
			if ((this._targetuserID != value))
			{
				this.OntargetuserIDChanging(value);
				this.SendPropertyChanging();
				this._targetuserID = value;
				this.SendPropertyChanged("targetuserID");
				this.OntargetuserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string title
	{
		get
		{
			return this._title;
		}
		set
		{
			if ((this._title != value))
			{
				this.OntitleChanging(value);
				this.SendPropertyChanging();
				this._title = value;
				this.SendPropertyChanged("title");
				this.OntitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string message
	{
		get
		{
			return this._message;
		}
		set
		{
			if ((this._message != value))
			{
				this.OnmessageChanging(value);
				this.SendPropertyChanging();
				this._message = value;
				this.SendPropertyChanged("message");
				this.OnmessageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageTime", DbType="DateTime NOT NULL")]
	public System.DateTime messageTime
	{
		get
		{
			return this._messageTime;
		}
		set
		{
			if ((this._messageTime != value))
			{
				this.OnmessageTimeChanging(value);
				this.SendPropertyChanging();
				this._messageTime = value;
				this.SendPropertyChanged("messageTime");
				this.OnmessageTimeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sysdiagrams")]
public partial class sysdiagrams : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _name;
	
	private int _principal_id;
	
	private int _diagram_id;
	
	private System.Nullable<int> _version;
	
	private System.Data.Linq.Binary _definition;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onprincipal_idChanging(int value);
    partial void Onprincipal_idChanged();
    partial void Ondiagram_idChanging(int value);
    partial void Ondiagram_idChanged();
    partial void OnversionChanging(System.Nullable<int> value);
    partial void OnversionChanged();
    partial void OndefinitionChanging(System.Data.Linq.Binary value);
    partial void OndefinitionChanged();
    #endregion
	
	public sysdiagrams()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_principal_id", DbType="Int NOT NULL")]
	public int principal_id
	{
		get
		{
			return this._principal_id;
		}
		set
		{
			if ((this._principal_id != value))
			{
				this.Onprincipal_idChanging(value);
				this.SendPropertyChanging();
				this._principal_id = value;
				this.SendPropertyChanged("principal_id");
				this.Onprincipal_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diagram_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int diagram_id
	{
		get
		{
			return this._diagram_id;
		}
		set
		{
			if ((this._diagram_id != value))
			{
				this.Ondiagram_idChanging(value);
				this.SendPropertyChanging();
				this._diagram_id = value;
				this.SendPropertyChanged("diagram_id");
				this.Ondiagram_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_version", DbType="Int")]
	public System.Nullable<int> version
	{
		get
		{
			return this._version;
		}
		set
		{
			if ((this._version != value))
			{
				this.OnversionChanging(value);
				this.SendPropertyChanging();
				this._version = value;
				this.SendPropertyChanged("version");
				this.OnversionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_definition", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary definition
	{
		get
		{
			return this._definition;
		}
		set
		{
			if ((this._definition != value))
			{
				this.OndefinitionChanging(value);
				this.SendPropertyChanging();
				this._definition = value;
				this.SendPropertyChanged("definition");
				this.OndefinitionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.togetherBuy")]
public partial class togetherBuy : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _togetherBuyID;
	
	private int _userID;
	
	private string _togetherBuyStore;
	
	private string _togetherBuyFoodName;
	
	private string _togetherBuyFoodCount;
	
	private string _togetherBuyFoodAddress;
	
	private System.Nullable<double> _togetherBuyFoodAddresslat;
	
	private System.Nullable<double> _togetherBuyFoodAddresslng;
	
	private System.Nullable<System.DateTime> _messageTime;
	
	private System.Nullable<System.DateTime> _messageTimeOver;
	
	private string _messageNote;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntogetherBuyIDChanging(int value);
    partial void OntogetherBuyIDChanged();
    partial void OnuserIDChanging(int value);
    partial void OnuserIDChanged();
    partial void OntogetherBuyStoreChanging(string value);
    partial void OntogetherBuyStoreChanged();
    partial void OntogetherBuyFoodNameChanging(string value);
    partial void OntogetherBuyFoodNameChanged();
    partial void OntogetherBuyFoodCountChanging(string value);
    partial void OntogetherBuyFoodCountChanged();
    partial void OntogetherBuyFoodAddressChanging(string value);
    partial void OntogetherBuyFoodAddressChanged();
    partial void OntogetherBuyFoodAddresslatChanging(System.Nullable<double> value);
    partial void OntogetherBuyFoodAddresslatChanged();
    partial void OntogetherBuyFoodAddresslngChanging(System.Nullable<double> value);
    partial void OntogetherBuyFoodAddresslngChanged();
    partial void OnmessageTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnmessageTimeChanged();
    partial void OnmessageTimeOverChanging(System.Nullable<System.DateTime> value);
    partial void OnmessageTimeOverChanged();
    partial void OnmessageNoteChanging(string value);
    partial void OnmessageNoteChanged();
    #endregion
	
	public togetherBuy()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_togetherBuyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int togetherBuyID
	{
		get
		{
			return this._togetherBuyID;
		}
		set
		{
			if ((this._togetherBuyID != value))
			{
				this.OntogetherBuyIDChanging(value);
				this.SendPropertyChanging();
				this._togetherBuyID = value;
				this.SendPropertyChanged("togetherBuyID");
				this.OntogetherBuyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="Int NOT NULL")]
	public int userID
	{
		get
		{
			return this._userID;
		}
		set
		{
			if ((this._userID != value))
			{
				this.OnuserIDChanging(value);
				this.SendPropertyChanging();
				this._userID = value;
				this.SendPropertyChanged("userID");
				this.OnuserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_togetherBuyStore", DbType="NVarChar(50)")]
	public string togetherBuyStore
	{
		get
		{
			return this._togetherBuyStore;
		}
		set
		{
			if ((this._togetherBuyStore != value))
			{
				this.OntogetherBuyStoreChanging(value);
				this.SendPropertyChanging();
				this._togetherBuyStore = value;
				this.SendPropertyChanged("togetherBuyStore");
				this.OntogetherBuyStoreChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_togetherBuyFoodName", DbType="NVarChar(50)")]
	public string togetherBuyFoodName
	{
		get
		{
			return this._togetherBuyFoodName;
		}
		set
		{
			if ((this._togetherBuyFoodName != value))
			{
				this.OntogetherBuyFoodNameChanging(value);
				this.SendPropertyChanging();
				this._togetherBuyFoodName = value;
				this.SendPropertyChanged("togetherBuyFoodName");
				this.OntogetherBuyFoodNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_togetherBuyFoodCount", DbType="NVarChar(50)")]
	public string togetherBuyFoodCount
	{
		get
		{
			return this._togetherBuyFoodCount;
		}
		set
		{
			if ((this._togetherBuyFoodCount != value))
			{
				this.OntogetherBuyFoodCountChanging(value);
				this.SendPropertyChanging();
				this._togetherBuyFoodCount = value;
				this.SendPropertyChanged("togetherBuyFoodCount");
				this.OntogetherBuyFoodCountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_togetherBuyFoodAddress", DbType="NVarChar(50)")]
	public string togetherBuyFoodAddress
	{
		get
		{
			return this._togetherBuyFoodAddress;
		}
		set
		{
			if ((this._togetherBuyFoodAddress != value))
			{
				this.OntogetherBuyFoodAddressChanging(value);
				this.SendPropertyChanging();
				this._togetherBuyFoodAddress = value;
				this.SendPropertyChanged("togetherBuyFoodAddress");
				this.OntogetherBuyFoodAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_togetherBuyFoodAddresslat", DbType="Float")]
	public System.Nullable<double> togetherBuyFoodAddresslat
	{
		get
		{
			return this._togetherBuyFoodAddresslat;
		}
		set
		{
			if ((this._togetherBuyFoodAddresslat != value))
			{
				this.OntogetherBuyFoodAddresslatChanging(value);
				this.SendPropertyChanging();
				this._togetherBuyFoodAddresslat = value;
				this.SendPropertyChanged("togetherBuyFoodAddresslat");
				this.OntogetherBuyFoodAddresslatChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_togetherBuyFoodAddresslng", DbType="Float")]
	public System.Nullable<double> togetherBuyFoodAddresslng
	{
		get
		{
			return this._togetherBuyFoodAddresslng;
		}
		set
		{
			if ((this._togetherBuyFoodAddresslng != value))
			{
				this.OntogetherBuyFoodAddresslngChanging(value);
				this.SendPropertyChanging();
				this._togetherBuyFoodAddresslng = value;
				this.SendPropertyChanged("togetherBuyFoodAddresslng");
				this.OntogetherBuyFoodAddresslngChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageTime", DbType="DateTime")]
	public System.Nullable<System.DateTime> messageTime
	{
		get
		{
			return this._messageTime;
		}
		set
		{
			if ((this._messageTime != value))
			{
				this.OnmessageTimeChanging(value);
				this.SendPropertyChanging();
				this._messageTime = value;
				this.SendPropertyChanged("messageTime");
				this.OnmessageTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageTimeOver", DbType="DateTime")]
	public System.Nullable<System.DateTime> messageTimeOver
	{
		get
		{
			return this._messageTimeOver;
		}
		set
		{
			if ((this._messageTimeOver != value))
			{
				this.OnmessageTimeOverChanging(value);
				this.SendPropertyChanging();
				this._messageTimeOver = value;
				this.SendPropertyChanged("messageTimeOver");
				this.OnmessageTimeOverChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageNote", DbType="NVarChar(MAX)")]
	public string messageNote
	{
		get
		{
			return this._messageNote;
		}
		set
		{
			if ((this._messageNote != value))
			{
				this.OnmessageNoteChanging(value);
				this.SendPropertyChanging();
				this._messageNote = value;
				this.SendPropertyChanged("messageNote");
				this.OnmessageNoteChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.togetherBuycomment")]
public partial class togetherBuycomment : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _togetherBuycommentID;
	
	private int _togetherBuyID;
	
	private int _userID;
	
	private string _comment;
	
	private System.Nullable<int> _evaluation;
	
	private System.Nullable<System.DateTime> _commentDay;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntogetherBuycommentIDChanging(int value);
    partial void OntogetherBuycommentIDChanged();
    partial void OntogetherBuyIDChanging(int value);
    partial void OntogetherBuyIDChanged();
    partial void OnuserIDChanging(int value);
    partial void OnuserIDChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    partial void OnevaluationChanging(System.Nullable<int> value);
    partial void OnevaluationChanged();
    partial void OncommentDayChanging(System.Nullable<System.DateTime> value);
    partial void OncommentDayChanged();
    #endregion
	
	public togetherBuycomment()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_togetherBuycommentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int togetherBuycommentID
	{
		get
		{
			return this._togetherBuycommentID;
		}
		set
		{
			if ((this._togetherBuycommentID != value))
			{
				this.OntogetherBuycommentIDChanging(value);
				this.SendPropertyChanging();
				this._togetherBuycommentID = value;
				this.SendPropertyChanged("togetherBuycommentID");
				this.OntogetherBuycommentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_togetherBuyID", DbType="Int NOT NULL")]
	public int togetherBuyID
	{
		get
		{
			return this._togetherBuyID;
		}
		set
		{
			if ((this._togetherBuyID != value))
			{
				this.OntogetherBuyIDChanging(value);
				this.SendPropertyChanging();
				this._togetherBuyID = value;
				this.SendPropertyChanged("togetherBuyID");
				this.OntogetherBuyIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="Int NOT NULL")]
	public int userID
	{
		get
		{
			return this._userID;
		}
		set
		{
			if ((this._userID != value))
			{
				this.OnuserIDChanging(value);
				this.SendPropertyChanging();
				this._userID = value;
				this.SendPropertyChanged("userID");
				this.OnuserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string comment
	{
		get
		{
			return this._comment;
		}
		set
		{
			if ((this._comment != value))
			{
				this.OncommentChanging(value);
				this.SendPropertyChanging();
				this._comment = value;
				this.SendPropertyChanged("comment");
				this.OncommentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_evaluation", DbType="Int")]
	public System.Nullable<int> evaluation
	{
		get
		{
			return this._evaluation;
		}
		set
		{
			if ((this._evaluation != value))
			{
				this.OnevaluationChanging(value);
				this.SendPropertyChanging();
				this._evaluation = value;
				this.SendPropertyChanged("evaluation");
				this.OnevaluationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commentDay", DbType="DateTime")]
	public System.Nullable<System.DateTime> commentDay
	{
		get
		{
			return this._commentDay;
		}
		set
		{
			if ((this._commentDay != value))
			{
				this.OncommentDayChanging(value);
				this.SendPropertyChanging();
				this._commentDay = value;
				this.SendPropertyChanged("commentDay");
				this.OncommentDayChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.userAccounts")]
public partial class userAccounts : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _accountID;
	
	private string _userAccount;
	
	private string _userPassword;
	
	private int _userID;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnaccountIDChanging(int value);
    partial void OnaccountIDChanged();
    partial void OnuserAccountChanging(string value);
    partial void OnuserAccountChanged();
    partial void OnuserPasswordChanging(string value);
    partial void OnuserPasswordChanged();
    partial void OnuserIDChanging(int value);
    partial void OnuserIDChanged();
    #endregion
	
	public userAccounts()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int accountID
	{
		get
		{
			return this._accountID;
		}
		set
		{
			if ((this._accountID != value))
			{
				this.OnaccountIDChanging(value);
				this.SendPropertyChanging();
				this._accountID = value;
				this.SendPropertyChanged("accountID");
				this.OnaccountIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userAccount", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string userAccount
	{
		get
		{
			return this._userAccount;
		}
		set
		{
			if ((this._userAccount != value))
			{
				this.OnuserAccountChanging(value);
				this.SendPropertyChanging();
				this._userAccount = value;
				this.SendPropertyChanged("userAccount");
				this.OnuserAccountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userPassword", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string userPassword
	{
		get
		{
			return this._userPassword;
		}
		set
		{
			if ((this._userPassword != value))
			{
				this.OnuserPasswordChanging(value);
				this.SendPropertyChanging();
				this._userPassword = value;
				this.SendPropertyChanged("userPassword");
				this.OnuserPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="Int NOT NULL")]
	public int userID
	{
		get
		{
			return this._userID;
		}
		set
		{
			if ((this._userID != value))
			{
				this.OnuserIDChanging(value);
				this.SendPropertyChanging();
				this._userID = value;
				this.SendPropertyChanged("userID");
				this.OnuserIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
